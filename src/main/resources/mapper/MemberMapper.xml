<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.kason.app.dao.MemberMapper" >
  <resultMap id="BaseResultMap" type="com.kason.app.entity.Member" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="phone" property="phone" jdbcType="INTEGER" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="token" property="token" jdbcType="VARCHAR" />
    <result column="reg_date" property="regDate" jdbcType="TIMESTAMP" />
    <result column="wechar_openid" property="wecharOpenid" jdbcType="VARCHAR" />
    <result column="qq" property="qq" jdbcType="INTEGER" />
    <result column="qq_openid" property="qqOpenid" jdbcType="VARCHAR" />
    <result column="exam_type_id" property="examTypeId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, phone, password, token, reg_date, wechar_openid, qq, qq_openid, exam_type_id
  </sql>
  <select id="selectByPhoneAndToken" resultMap="BaseResultMap" parameterType="com.kason.app.entity.Member" >
    select 
    <include refid="Base_Column_List" />
    from member
    where phone = #{phone,jdbcType=INTEGER} and token = #{token,jdbcType=VARCHAR}
  </select>
  <select id="selectByPhoneAndPassword" resultMap="BaseResultMap" parameterType="com.kason.app.entity.Member" >
    select
    <include refid="Base_Column_List" />
    from member
    where phone = #{phone,jdbcType=INTEGER} and password = #{password,jdbcType=VARCHAR}
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from member
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByPhone" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from member
    where phone = #{phone,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from member
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.kason.app.entity.Member" >
    insert into member (id, phone, password, 
      token, reg_date, wechar_openid, 
      qq, qq_openid, exam_type_id
      )
    values (#{id,jdbcType=INTEGER}, #{phone,jdbcType=INTEGER}, #{password,jdbcType=VARCHAR}, 
      #{token,jdbcType=VARCHAR}, #{regDate,jdbcType=TIMESTAMP}, #{wecharOpenid,jdbcType=VARCHAR}, 
      #{qq,jdbcType=INTEGER}, #{qqOpenid,jdbcType=VARCHAR}, #{examTypeId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.kason.app.entity.Member" >
    insert into member
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="token != null" >
        token,
      </if>
      <if test="regDate != null" >
        reg_date,
      </if>
      <if test="wecharOpenid != null" >
        wechar_openid,
      </if>
      <if test="qq != null" >
        qq,
      </if>
      <if test="qqOpenid != null" >
        qq_openid,
      </if>
      <if test="examTypeId != null" >
        exam_type_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=INTEGER},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="token != null" >
        #{token,jdbcType=VARCHAR},
      </if>
      <if test="regDate != null" >
        #{regDate,jdbcType=TIMESTAMP},
      </if>
      <if test="wecharOpenid != null" >
        #{wecharOpenid,jdbcType=VARCHAR},
      </if>
      <if test="qq != null" >
        #{qq,jdbcType=INTEGER},
      </if>
      <if test="qqOpenid != null" >
        #{qqOpenid,jdbcType=VARCHAR},
      </if>
      <if test="examTypeId != null" >
        #{examTypeId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.kason.app.entity.Member" >
    update member
    <set >
      <if test="phone != null" >
        phone = #{phone,jdbcType=INTEGER},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="token != null" >
        token = #{token,jdbcType=VARCHAR},
      </if>
      <if test="regDate != null" >
        reg_date = #{regDate,jdbcType=TIMESTAMP},
      </if>
      <if test="wecharOpenid != null" >
        wechar_openid = #{wecharOpenid,jdbcType=VARCHAR},
      </if>
      <if test="qq != null" >
        qq = #{qq,jdbcType=INTEGER},
      </if>
      <if test="qqOpenid != null" >
        qq_openid = #{qqOpenid,jdbcType=VARCHAR},
      </if>
      <if test="examTypeId != null" >
        exam_type_id = #{examTypeId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kason.app.entity.Member" >
    update member
    set phone = #{phone,jdbcType=INTEGER},
      password = #{password,jdbcType=VARCHAR},
      token = #{token,jdbcType=VARCHAR},
      reg_date = #{regDate,jdbcType=TIMESTAMP},
      wechar_openid = #{wecharOpenid,jdbcType=VARCHAR},
      qq = #{qq,jdbcType=INTEGER},
      qq_openid = #{qqOpenid,jdbcType=VARCHAR},
      exam_type_id = #{examTypeId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>